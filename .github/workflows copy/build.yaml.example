name: Build

on:
  push:
    branches:
      - new-develop
    paths:
      - '.github/workflows/**'
      - 'cmd/**'
      - 'services/**'
      - 'pkg/**'
      - 'proto/**'
      - 'containers/**'
      - 'databases/**'
      - 'go.mod'
      - 'go.sum'

# env:
#   AWS_ROLE_ARN: arn:aws:iam::821865125530:role/UTMBackendGithub-Role
#   AWS_REGION: us-west-2

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          DOCKER_BUILDKIT: 1
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          GIT_ACCESS_KEY: ${{ secrets.GIT_ACCESS_KEY }}
        run: |
          NAMES=( "utm-registration" )
          NAMES+=( "utm-registration-publisher" )
          NAMES+=( "utm-plan" )
          NAMES+=( "utm-plan-publisher" )
          NAMES+=( "utm-operation" )
          NAMES+=( "utm-operation-publisher" )
          NAMES+=( "utm-airspace" )
          NAMES+=( "utm-airspace-publisher" )
          NAMES+=( "utm-syncer-grpc" )
          NAMES+=( "utm-syncer" )
          NAMES+=( "planning-consumer" )
          NAMES+=( "operation-consumer" )
          NAMES+=( "airspace-consumer" )

          NAMES+=( "utm-migration" )

          PATHS=( "containers/registration/production/Dockerfile" )
          PATHS+=( "containers/publisher/registration/production/Dockerfile" )
          PATHS+=( "containers/planning/production/Dockerfile" )
          PATHS+=( "containers/publisher/planning/production/Dockerfile" )
          PATHS+=( "containers/operation/production/Dockerfile" )
          PATHS+=( "containers/publisher/operation/production/Dockerfile" )
          PATHS+=( "containers/airspace/production/Dockerfile" )
          PATHS+=( "containers/publisher/airspace/production/Dockerfile" )
          PATHS+=( "containers/syncer/production/Dockerfile" )
          PATHS+=( "containers/consumer/syncer/production/Dockerfile" )
          PATHS+=( "containers/consumer/planning/production/Dockerfile" )
          PATHS+=( "containers/consumer/operation/production/Dockerfile" )
          PATHS+=( "containers/consumer/airspace/production/Dockerfile" )

          PATHS+=( "containers/migration/Dockerfile" )
          for i in "${!NAMES[@]}"
          do
            docker build -t $ECR_REGISTRY/${NAMES[$i]}:${IMAGE_TAG} -f ${PATHS[$i]} .
            docker push $ECR_REGISTRY/${NAMES[$i]}:${IMAGE_TAG}
          done
